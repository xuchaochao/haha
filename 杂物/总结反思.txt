/Users/xcc/Documents/Dev/Android Studio.app/Contents/gradle/gradle-2.14.1/bin/gradle
不足之处:

太过于重视技术,没有放在测试上.
(正确的应该是测试思维+业务思维+技术能力.)

反思问题:

1.如何设计测试用例?
什么时候设计:
如果需求文档很具体,那么就直接拿需求文档来设计,然后在app测试的时候根据具体的情况快速的写一些大概的点.


黑盒，它是从UI层上进行测试，涉及到功能，逻辑，模块的交互，接口的调用，端与端的交互，仅仅是从UI层上来进行测试，就要覆盖到这些，是非常考验测试人员的逻辑与用例的场景覆盖的。要保证到场景的覆盖，还要尽可能去模拟用户的真实场景，不仅费神而且费力。

测试项目：App应用软件
需求测试：查看App的需求文档
界面测试：查看App的界面外观是否符合标准
功能测试：查看App的功能是否可以使用
可靠性测试：使用App过程中是否退出等情况
兼容性测试：安装App到平台（Android2.2/4.2），不同的分辨率是否成功
疲劳测试：安装App程序一直置于后台是否退出或闪退等情况
易用性测试：App程序是否容易操作、人性化
压力测试：重复安装、卸载App程序或不断点击某一个按钮是否退出等情况
并发测试：安装、卸载App程序过程中或操作App程序功能时受到第三方的干扰
回归测试：对App过程中Bug进行回归测试
数据连接测试：数据、WIFI、热点等情况下测试
用户手册测试：查看使用手册是否对App程序用法、限制、条件等有详细描述
用到的方法：等价类划分、边界值、场景法、错误推测法




2.测试流程是怎么样的?

刚来的时候什么都没有,但是产品已经开发快好了,而且产品是重写的,老板说和旧版的基本不一样.所以只是根据需求文档写了一些测试点(CheckList),完成了这个大版的测试.测试用例(Testcase)在这版上线之后才开始写的.

a.需求分析:
和大概知道要做个什么东西有啥功能
挖掘需求,看看有什么地方不合理的,

在产品差不多完成的时候进行手工测试.
需求分析、测试设计、测试准备、编写用例、执行测试、提交结果

3.整个项目的过程中,你扮演了什么角色,自动化在什么时候介入?
身为一个测试，首要的核心工作就是保证产品质量

4.测试用例用了多少时间写完?自动化脚本花了多少时间写完?
5.


禅道中测试用例:
第一版:
总的测试用例
自动化的测试用例
总的测试用例-自动化的测试用例

第二版:
