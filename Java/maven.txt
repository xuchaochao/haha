maven

1.更改默认的本地资源库:将conf文件夹中setting.xml中:
<localRepository>/Users/xcc/Documents/Dev/apache-maven/repo/m2</localRepository>

2.本地仓库vs远程仓库(中央仓库):
运行Maven的时候，Maven所需要的任何构件都是直接从本地仓库获取的。如果本地仓库没有，它会首先尝试从远程仓库下载构件至本地仓库，然后再使用本地仓库的构件。


3.
mvn compile //编译，首次会自动下载依赖包
mvn test    //运行测试
//上面两条还可以缩短为一条编写，如下：
mvn compile test
//或者
mvn clean compile test

4.pom.xml中设置远程仓库:
<repositories>
		<repository>
			<id>saucelabs-repository</id>
			<url>https://repository-saucelabs.forge.cloudbees.com/release</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

<releases><enabled>true</enabled></releases>告诉Maven可以从这个仓库下载releases版本的构件;
而<snapshots><enabled>false</enabled></snapshots>告诉Maven不要从这个仓库下载snapshot版本的构件。
禁止从公共仓库下载snapshot构件是推荐的做法，因为这些构件不稳定，且不受你控制，你应该避免使用。	

5.setting.xml中设置远程仓库:
pom.xml的设置远程仓库的弊端在于每个项目都需要重新设置一次,但是如果在setting.xml中设置的话就是全局的了.

    <settings>  
      ...   
      <profiles>  
        <profile>  
          <id>dev</id>  
          <!-- repositories and pluginRepositories here-->  
        </profile>  
      </profiles>  
      <activeProfiles>  
        <activeProfile>dev</activeProfile>  
      </activeProfiles>  
      ...   
    </settings>  
6.镜像
如果你的地理位置附近有一个速度更快的central镜像，或者你想覆盖central仓库配置，或者你想为所有POM使用唯一的一个远程仓库（这个远程仓库代理的所有必要的其它仓库），你可以使用settings.xml中的mirror配置。
